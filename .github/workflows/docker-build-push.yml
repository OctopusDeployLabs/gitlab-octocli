# This is a basic workflow to help you get started with Actions

name: Docker Image for GitLab

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  schedule:
    - cron: '0 5 * * *'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  
  get_octo_cli_version:
    runs-on: windows-latest
    outputs: 
      VERSION: ${{ steps.choco.outputs.VERSION }}
      CONTINUE: ${{ steps.choco.outputs.CONTINUE }}
    steps:
      - uses: actions/checkout@v2
      - id: choco
        name: Compare latest version with container
        run: |
          $chocoInformationRaw = choco info octopustools --limitoutput
          $version = ($chocoInformationRaw.Split("|"))[1]
          $versionSplit = $version.Split(".")
          
          Write-Host "Retrieving tags ..."
          
          $response = try {
            $repositoryTags = Invoke-RestMethod "https://registry.hub.docker.com/v1/repositories/octopuslabs/gitlab-octocli/tags"
            Write-Host "Retrieval successful!"
          } catch [System.Net.WebException] { 
            $_.Exception.Response 
            Write-Host "Retreival failed!!"
          }
          
          #echo "::set-output name=VERSION::$version"
          Write-Host "Version: $version"
          echo "VERSION=$version" >> $GITHUB_ENV
          
          if ($null -eq $response)
          {
            $matchingTag = $repositoryTags | Where-Object {$_.Name -eq $version}
            
            if ($null -ne $matchingTag)
            {
              Write-Host "Docker container already has latest version."
              #echo "::set-output name=Continue::No"
              echo "CONTINUE=No" >> $GITHUB_ENV
            }
            else
            {
              Write-Host "Octopus CLI has been updated, create new image."
              #echo "::set-output name=Continue::Yes"
              echo "CONTINUE=Yes" >> $GITHUB_ENV
            }
          }
          else
          {
            if ($response.StatusCode.value__ -eq 404)
            {
              Write-Host "No tags exist for repo, assuming first build."
              #echo "::set-output name=CONTINUE::Yes"
              echo "CONTINUE=Yes" >> $GITHUB_ENV
            }
          }
          
        shell: powershell
          
          
          
  # This workflow contains a single job called "build"
  build-linux:
    # define needs
    needs: [get_octo_cli_version]
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Login to docker
      - name: Docker Hub login
        env:
          USERNAME: ${{ secrets.DOCKER_HUB_USER }}
          PASSWORD: ${{ secrets.DOCKER_HUB_PAT }}
        run: docker login --username $USERNAME --password "$PASSWORD"

      # Build ubuntu images
      - name: Build the docker 1804 image
        env: 
          VERSION_NUMBER: ${{ env.VERSION }}
        run: docker build ./ubuntu-1804 --tag octopuslabs/gitlab-octocli:$VERSION_NUMBER-ubuntu.1804 --tag octopuslabs/gitlab-octocli:latest-ubuntu.1804
        if: ${{ env.CONTINUE == 'Yes' }}
        
      - name: Push the 1804 image
        env:
          VERSION_NUMBER: ${{ env.VERSION }}
        run: |
          docker push octopuslabs/gitlab-octocli:$VERSION_NUMBER-ubuntu.1804
          docker push octopuslabs/gitlab-octocli:latest-ubuntu.1804
        if: ${{ env.CONTINUE == 'Yes' }}
        
      - name: Build the docker 2004 image
        env:
          VERSION_NUMBER: ${{ env.VERSION }}
        run: docker build ./ubuntu-2004 --tag octopuslabs/gitlab-octocli:$VERSION_NUMBER-ubuntu.2004 --tag octopuslabs/gitlab-octocli:latest-ubuntu.2004
        if: ${{ env.CONTINUE == 'Yes' }}
        
      - name: Push the 2004 image
        env:
          VERSION_NUMBER: ${{ env.VERSION }}
        run: |
          docker push octopuslabs/gitlab-octocli:$VERSION_NUMBER-ubuntu.2004
          docker push octopuslabs/gitlab-octocli:latest-ubuntu.2004
        if: ${{ env.CONTINUE == 'Yes' }}

  build-docker-manifest:
    needs: [build-linux, get_octo_cli_version]
    runs-on: ubuntu-latest

    steps:
      - name: Docker hub login
        env:
          USERNAME: ${{ secrets.DOCKER_HUB_USER }}
          PASSWORD: ${{ secrets.DOCKER_HUB_PAT }}
        run: docker login --username $USERNAME --password "$PASSWORD"

      - name: Build manifests
        env:
          VERSION_NUMBER: ${{ env.VERSION }}
        run: |
          docker manifest create octopuslabs/gitlab-octocli:latest octopuslabs/gitlab-octocli:latest-ubuntu.2004
          docker manifest create octopuslabs/gitlab-octocli:$VERSION_NUMBER octopuslabs/gitlab-octocli:$VERSION_NUMBER-ubuntu.2004
        if: ${{ env.CONTINUE == 'Yes'}}

      - name: Push manifests
        env:
          VERSION_NUMBER: ${{ env.VERSION }}
        run: |
          docker manifest push octopuslabs/gitlab-octocli:latest
          docker manifest push octopuslabs/gitlab-octocli:$VERSION_NUMBER
        if: ${{ env.CONTINUE == 'Yes'}}
